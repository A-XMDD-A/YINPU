{"version":3,"file":"main-4057182f1caac2a0f071.js","mappings":"gMAKA,SAAgB,CACZA,UCFW,UAAU,gBAAEC,EAAF,YAAmBC,EAAnB,UAAgCC,IACvD,OAAO,uBAAKA,UAAWA,GACrB,gBAACC,EAAA,EAAD,CAAYC,MAAM,UAChB,gBAACC,EAAA,EAAD,CACEN,UAAU,IACVO,KAAK,GACLC,OAAO,SACPC,IAAI,YAEJ,uBAAKC,IAAI,iDDNbC,KAAM,OACNH,OAAQ,aEaNI,E,SAASC,MAAkBC,OAAOC,SAASC,SAC3C,SAAEC,EAAF,OAAYC,EAAZ,KAAoBC,EAApB,QAA0BC,EAA1B,MAAmCC,GAAUT,EAE/CM,IACFI,EAAOC,SAAWL,GAGhBE,IACFI,EAAYJ,QAAUA,GAGxB,IAAIK,EAAK,OAKT,MAAMH,EAAS,CACbI,WAAYT,EACZM,SAAUL,EACVS,aAAcR,EAEdS,mBAAmB,GAqBfJ,EAAc,GAOpBK,EAAAA,EAAAA,OACE,CACEC,GAAI,UACJC,sBAAuB,CACrBC,SAAS,GAOXC,SAAU,QACVC,cAAe,UACfC,MAAO,CACLC,QAAS,CACPC,KAAM,QACNC,QAAS,CACPC,KAAM,WAERC,UAAW,CACTD,KAAM,WAERE,OAAQ,CACNC,KAAM,UACNH,KAAM,UACNI,MAAO,WAETC,MAAO,CACLL,KAAM,WAERM,aAAc,CACZN,KAAM,WAERO,WAAY,CACVC,QAAS,WAEXC,WAAY,CACVV,QAAS,UACTE,UAAW,WAEbS,gBAAiB,sBACjBC,YAAa,CACXC,OAAQ,CAAEC,YAAa,GACvBL,QAAS,CAAEM,YAAa,UAAWD,YAAa,GAChDE,QAAS,CAAED,YAAa,UAAWD,YAAa,GAChDG,SAAU,CAAEF,YAAa,UAAWD,YAAa,IAEnDpC,OAAQ,CACN+B,QAAS,CAAES,UAAW,UAAWJ,YAAa,IAC9CE,QAAS,CAAEE,UAAW,UAAWJ,YAAa,IAC9CG,SAAU,CAAEC,UAAW,UAAWJ,YAAa,OAIrDtC,OAAQ,CAEN2C,YAAY,EACZjC,YAAAA,GAIFkC,QAAS,CAACpC,IAEZ,IACKqC,EAAAA,KACAC,EAAAA,KACAC,M","sources":["webpack://mirador-integration/./src/plugins/index.js","webpack://mirador-integration/./src/plugins/components/customBrand.js","webpack://mirador-integration/./src/index.js"],"sourcesContent":["import CustomBrand from './components/customBrand'\n// import AnnotationButton from './components/annotationViewButton'\n// import translations from './translations';\n// import * as actions from '../../mirador/es/src/state/actions';\n\nexport default [{\n    component: CustomBrand,\n    mode: 'wrap',\n    target: 'Branding',\n  },\n  // {\n  //   component: AnnotationButton,\n  //   mode: 'add',\n  //   target: 'WindowTopBarPluginArea',\n  //   config: {\n  //     translations,\n  //   },\n  //   mapDispatchToProps: { setWindowViewType: actions.setWindowViewType },\n  // },\n  // {\n  //   component: CustomPrimaryWindow,\n  //   mode: 'wrap',\n  //   target: 'PrimaryWindow'\n  // }\n];","import React, { Component } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\n\nexport default function ({ TargetComponent, targetProps, className }) {\n  return <div className={className}>\n    <Typography align=\"center\">\n      <IconButton\n        component=\"a\"\n        href=\"\"\n        target=\"_blank\"\n        rel=\"noopener\"\n      >\n        <img src=\"https://viewers.etu.wiki/etu_logo_sm.png\" />\n      </IconButton>\n    </Typography>\n  </div>;\n}\n\n\n\n","import Mirador from '@etu/chinese-mirador';\nimport textOverlayPlugin from '@etu/mirador-textoverlay';\nimport { miradorImageToolsPlugin } from '@etu/mirador-image-tools';\nimport plugins from './plugins';\n// import helpButtonPlugin from './plugins/';\n\n\n// import annotationPlugins from '../mirador-annotations/es';\n// import LocalStorageAdapter from '../mirador-annotations/es/LocalStorageAdapter';\n\n// import AnnototAdapter from '../../src/AnnototAdapter';\n\n// const endpointUrl = 'http://127.0.0.1:3000/annotations';\n\n// export default {Mirador, textOverlayPlugin, miradorImageToolsPlugin};\n\n// global.Mirador = Mirador\n// global.textOverlayPlugin = textOverlayPlugin\n// global.miradorImageToolsPlugin = miradorImageToolsPlugin\n\nimport queryString from 'query-string';\nconst parsed = queryString.parse(window.location.search);\nconst { manifest, canvas, anno, visible, panel } = parsed;\n\nif (canvas) {\n  config.canvasId = canvas;\n}\n\nif (visible) {\n  textOverlay.visible = visible;\n}\n\nlet pl = 'info';\nif (panel) {\n  pl = panel;\n}\n\nconst config = {\n  manifestId: manifest,\n  canvasId: canvas,\n  annotationId: anno,\n\n  imageToolsEnabled: true,\n  // imageToolsOpen: true,\n\n  // manifestId: 'http://localhost/p/3/71d6dd57-43df-4da5-8ab0-7bc3873dd4a5',\n  // manifestId: 'https://cdn.fd.etu.wiki/p/3/311cc3cd-b715-4385-942c-680defb9e809',\n  // manifestId: 'https://api.dev.etu.wiki/p/2/11caaaa3-8f46-4447-83d4-f51611f635d4'\n  // manifestId: 'http://localhost/p/3/e2508fd7-7b32-4971-8551-dc0c113999af/1'\n};\n\n// if (window.screen)  {\n//   if (window.screen.width <= window.screen.height) {\n//     config['thumbnailNavigationPosition'] = 'far-bottom'\n//   }\n//   if (window.screen.width > window.screen.height) {\n//     config['thumbnailNavigationPosition'] = 'far-right'\n//   }\n// } else {\n//   config['thumbnailNavigationPosition'] = 'far-bottom'\n// }\n\n\nconst textOverlay = {\n  // enabled: true,\n  // selectable: true,\n  // textColor: '#c1aa82',\n  // bgColor: '#000000',\n};\n\nMirador.viewer(\n  {\n    id: 'mirador',\n    workspaceControlPanel: {\n      enabled: true, // Configure if the control panel should be rendered.  Useful if you want to lock the viewer down to only the configured manifests\n    },\n    // annotation: {\n    //   adapter: (canvasId) => new LocalStorageAdapter(`localStorage://?canvasId=${canvasId}`),\n    //   // adapter: (canvasId) => new AnnototAdapter(canvasId, endpointUrl),\n    //   exportLocalStorageAnnotations: false, // display annotation JSON export button\n    // },\n    language: 'zh-CN',\n    selectedTheme: 'mirador',\n    theme: { // Sets up a MaterialUI theme. See https://material-ui.com/customization/default-theme/\n      mirador: {\n        type: 'light',\n        primary: {\n          main: '#0055a6', // Controls the color of the Add button and current window indicator\n        },\n        secondary: {\n          main: '#0055a6', // Controls the color of Selects and FormControls\n        },\n        shades: { // Shades that can be used to offset color areas of the Workspace / Window\n          dark: '#eeeeee',\n          main: '#ffffff',\n          light: '#f5f5f5',\n        },\n        error: {\n          main: '#b00020',\n        },\n        notification: { // Color used in MUI Badge dots\n          main: '#ffa224'\n        },\n        hitCounter: {\n          default: '#bdbdbd',\n        },\n        highlights: {\n          primary: '#ffff00',\n          secondary: '#00BFFF',\n        },\n        section_divider: 'rgba(0, 0, 0, 0.25)',\n        annotations: {\n          hidden: { globalAlpha: 0 },\n          default: { strokeStyle: '#00BFFF', globalAlpha: 1 },\n          hovered: { strokeStyle: '#BF00FF', globalAlpha: 1 },\n          selected: { strokeStyle: '#ffff00', globalAlpha: 1 },\n        },\n        search: {\n          default: { fillStyle: '#00BFFF', globalAlpha: 0.3 },\n          hovered: { fillStyle: '#00FFFF', globalAlpha: 0.3 },\n          selected: { fillStyle: '#ffff00', globalAlpha: 0.3 },\n        }\n      },\n    },\n    window: {\n      // allowMaximize: false,\n      allowClose: true, // Configure if windows can be closed or not\n      textOverlay,\n      // sideBarOpen: true, // Always show this manifest with sidebar open,\n      // sideBarPanel: pl,\n    },\n    windows: [config],\n  },\n  [\n    ...miradorImageToolsPlugin,\n    ...textOverlayPlugin,\n    ...plugins,\n    // ...annotationPlugins\n  ]\n);\n\n"],"names":["component","TargetComponent","targetProps","className","Typography","align","IconButton","href","target","rel","src","mode","parsed","queryString","window","location","search","manifest","canvas","anno","visible","panel","config","canvasId","textOverlay","pl","manifestId","annotationId","imageToolsEnabled","Mirador","id","workspaceControlPanel","enabled","language","selectedTheme","theme","mirador","type","primary","main","secondary","shades","dark","light","error","notification","hitCounter","default","highlights","section_divider","annotations","hidden","globalAlpha","strokeStyle","hovered","selected","fillStyle","allowClose","windows","miradorImageToolsPlugin","textOverlayPlugin","plugins"],"sourceRoot":""}